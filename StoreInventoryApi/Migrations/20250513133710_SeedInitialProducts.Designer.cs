// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreInventoryApi.Data;

#nullable disable

namespace StoreInventoryApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250513133710_SeedInitialProducts")]
    partial class SeedInitialProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StoreInventoryApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 5, 13, 13, 37, 10, 782, DateTimeKind.Utc).AddTicks(2710),
                            IsActive = true,
                            Name = "Laptop",
                            Price = 1000m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 5, 13, 13, 37, 10, 782, DateTimeKind.Utc).AddTicks(2720),
                            IsActive = true,
                            Name = "Mouse",
                            Price = 50m,
                            Stock = 200
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 5, 13, 13, 37, 10, 782, DateTimeKind.Utc).AddTicks(2720),
                            IsActive = false,
                            Name = "IPod",
                            Price = 500m,
                            Stock = 0
                        });
                });

            modelBuilder.Entity("StoreInventoryApi.Models.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("StoreInventoryApi.Models.ProductReview", b =>
                {
                    b.HasOne("StoreInventoryApi.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StoreInventoryApi.Models.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
